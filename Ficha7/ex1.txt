#include <stdio.h>
#include <stdlib.h>

void preenche(int *a, int tam)
{
    for (int i = 0; i < tam; i++)
        a[i] = 5 * i;
}
int *f1(int *a, int *tam)
{
    int *p, i;
    p = realloc(a, sizeof(int) * (*tam + a[1])); <-  a) Realoca memória do array dinâmico a (aumenta)
    if (p == NULL)
        return a;
    a = p;
    preenche(a + *tam, a[1]);
    *tam += a[1];
    return a;
}
int main()
{
    int *v = NULL, total = 0;
    v = malloc(sizeof(int) * 3); <- a) Aloca memória para o array dinâmico v
    if (v == NULL)
        return 0;
    total = 3;
    preenche(v, total);
    v = f1(v, &total);
    free(v); <- a) Liberta a memória alocada
    return 0;
}

b)  1 - O código lida corretamente com falhas, mas o array não será expandido.
    2 - O código lida corretamente com falhas, encerrando o programa.
    3 - Não há erros no código atual, mas é importante garantir que v não seja usado após ser libertado.

c)  Dimensão 8, conteudo 0 -> 35 (5 em 5)

d)  Dimensão 3, conteudo 0, 5, 10